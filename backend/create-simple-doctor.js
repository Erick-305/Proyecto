const bcrypt = require('bcryptjs');
const pool = require('./config/pool');

async function createSimpleDoctor() {
    try {
        console.log('üè• Creando m√©dico con contrase√±a simple...');
        
        // Eliminar el m√©dico existente si existe
        await pool.query('DELETE FROM users WHERE email = $1', ['doctor@test.com']);
        
        // Hash simple para la contrase√±a "1234"
        const hash = await bcrypt.hash('1234', 10); // Usando menos rounds
        console.log('üîê Hash generado:', hash);
        
        // Crear nuevo m√©dico
        const result = await pool.query(`
            INSERT INTO users (email, password_hash, first_name, last_name, phone, role_id, is_active, email_verified)
            VALUES ($1, $2, $3, $4, $5, $6, $7, $8)
            RETURNING id, email
        `, ['doctor@test.com', hash, 'Dr. Test', 'Medico', '+1234567890', 2, true, true]);
        
        console.log('‚úÖ M√©dico creado:', result.rows[0]);
        
        // Verificar que la contrase√±a funciona
        const testUser = await pool.query('SELECT password_hash FROM users WHERE email = $1', ['doctor@test.com']);
        const testMatch = await bcrypt.compare('1234', testUser.rows[0].password_hash);
        console.log('üîë Test de contrase√±a:', testMatch ? '‚úÖ FUNCIONA' : '‚ùå FALLA');
        
    } catch (error) {
        console.error('‚ùå Error:', error);
    } finally {
        await pool.end();
    }
}

createSimpleDoctor();